{"version":3,"sources":["webpack:///./src/templates/blog-list.js"],"names":["BlogList","render","posts","this","props","data","edges","pageContext","currentPage","isFirst","isLast","numPage","prevPage","toString","nextPage","sx","alignItems","justifyContent","mb","h2","map","node","key","id","href","fields","slug","rel","frontmatter","title","color","fontSize","textDecoration","mt","date","React","Component","query"],"mappings":"iRAOqBA,E,gLACjBC,OAAA,WACI,IAAMC,EAAQC,KAAKC,MAAMC,KAAKH,MAAMI,MAD/B,EAE0BH,KAAKC,MAAMG,YAAnCC,EAFF,EAEEA,YACDC,EAA0B,IAAhBD,EACVE,EAASF,IAJV,EAEeG,QAGdC,EAAWJ,EAAc,GAAM,EAAI,SAAWA,EAAc,GAAGK,WAC/DC,EAAQ,UAAaN,EAAc,GAAGK,WAE5C,OACI,YAAC,IAAD,KACI,YAAC,IAAD,CAAME,GAAI,CACNC,WAAY,SACZC,eAAgB,gBAChBC,GAAI,SAEJ,YAAC,IAAOC,GAAR,aACA,YAAC,IAAD,uBAEJ,2BACKjB,EAAMkB,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OACP,mBAAKC,IAAKD,EAAKE,GAAIR,GAAI,CACnBG,GAAI,SAEJ,YAAC,IAAD,CAAMM,KAAI,IAAMH,EAAKI,OAAOC,KAAQC,IAAKN,EAAKO,YAAYC,MAAOd,GAAI,CACjEe,MAAO,OACPC,SAAU,CAAC,OAAQ,SAAU,SAAU,UACvCC,eAAgB,OAChB,SAAU,CACNF,MAAO,YACPE,eAAgB,eAGnBX,EAAKO,YAAYC,OAEtB,iBAAGd,GAAI,CACHkB,GAAI,YAEJ,wBAAOZ,EAAKO,YAAYM,WAIpC,YAAC,IAAD,CAAMnB,GAAI,CACNC,WAAY,SACZC,eAAgB,gBAChBgB,GAAI,UAEFxB,GACE,wBACI,YAAC,IAAD,CAAMe,KAAMZ,EAAUe,IAAI,WAAWZ,GAAI,CACrCiB,eAAgB,OAChB,SAAU,CACNA,eAAgB,YAChBF,MAAO,eAGV,IAPL,oBAYLpB,GACC,wBACI,YAAC,IAAD,CAAMc,KAAMV,EAAUa,IAAI,OAAOZ,GAAI,CACjCiB,eAAgB,OAChB,SAAU,CACNA,eAAgB,YAChBF,MAAO,eAJf,aAOe,U,GAtETK,IAAMC,WAiF/BC,EAAK","file":"component---src-templates-blog-list-js-67e536022f12fbb8dc41.js","sourcesContent":["/**@jsx jsx */\nimport { jsx, Flex, Styled, Link } from \"theme-ui\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\n\nexport default class BlogList extends React.Component {\n    render() {\n        const posts = this.props.data.posts.edges\n        const {currentPage, numPage} = this.props.pageContext\n        const isFirst = currentPage === 1\n        const isLast = currentPage === numPage\n        const prevPage = currentPage - 1 === 1 ? '/blog' : (currentPage - 1).toString()\n        const nextPage = `/blog/${(currentPage + 1).toString()}`\n\n        return(\n            <Layout>\n                <Flex sx={{\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    mb: '2rem'\n                }}>\n                    <Styled.h2>Blog</Styled.h2>\n                    <Link>View all tags</Link>\n                </Flex>\n                <section>\n                    {posts.map(({node}) => (\n                        <div key={node.id} sx={{\n                            mb: '2rem'\n                        }}>\n                            <Link href={`/${node.fields.slug}`} rel={node.frontmatter.title} sx={{\n                                color: 'text',\n                                fontSize: ['1rem', '1.5rem', '1.5rem', '1.5rem'],\n                                textDecoration: 'none',\n                                \":hover\": {\n                                    color: 'secondary',\n                                    textDecoration: 'underline'\n                                }\n                            }}>\n                                {node.frontmatter.title}\n                            </Link>\n                            <p sx={{\n                                mt: '0.25rem',\n                            }}>\n                                <time>{node.frontmatter.date}</time>\n                            </p>\n                        </div>\n                    ))}\n                    <Flex sx={{\n                        alignItems: 'center',\n                        justifyContent: 'space-between',\n                        mt: '8rem'\n                    }}>\n                        {!isFirst && (\n                            <span>\n                                <Link href={prevPage} rel=\"previous\" sx={{\n                                    textDecoration: 'none',\n                                    \":hover\": {\n                                        textDecoration: 'underline',\n                                        color: 'secondary'\n                                    }\n                                }}>\n                                    {\"\\u2190\"} Previous Page\n                                </Link>\n                            </span>\n                        )}\n\n                        { !isLast && (\n                            <span>\n                                <Link href={nextPage} rel=\"next\" sx={{\n                                    textDecoration: 'none',\n                                    \":hover\": {\n                                        textDecoration: 'underline',\n                                        color: 'secondary'\n                                    }\n                                }}>\n                                    Next Page {\"\\u2192\"}\n                                </Link>\n                            </span>\n                        )}\n                    </Flex>\n                </section>\n            </Layout>\n        )\n    }\n}\n\nexport const query = graphql`\n    query ($skip: Int!, $limit: Int!) {\n        posts: allMdx(\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    id\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        date(formatString: \"YYYY / MM / DD\")\n                    }\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}