{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/blog-post.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","PostHeader","title","date","tags","h1","sx","mb","fontSize","mx","map","tag","i","Fragment","PrvNextArticle","previous","next","mt","alignItems","justifyContent","textDecoration","color","href","fields","slug","rel","frontmatter","BlogPost","render","post","this","data","pageContext","description","image","pathName","article","topics","my","body","Component","query"],"mappings":"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","file":"component---src-templates-blog-post-js-e7773047aeec26347dd9.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/**@jsx jsx */\nimport { jsx, Styled, Flex, Link } from \"theme-ui\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/SEO\";\n\nexport const PostHeader = ({ title, date, tags }) =>{\n    return(\n        <div>\n        <Styled.h1 sx={{\n            mb: '0.25rem',\n            fontSize: ['1.875rem']\n        }}>\n            {title}\n        </Styled.h1>\n\n        <p>\n            <time>{date}</time>\n            <span sx={{ mx: '1rem'}}>\n                {\n                    tags.map((tag, i) => (\n                        <React.Fragment key={i}>\n                            {!!i && `, `}\n                            {tag}\n                        </React.Fragment>\n                    ))\n                }\n            </span>\n        </p>\n        </div>\n    )\n}\n\nexport const PrvNextArticle = ({ previous, next }) => {\n    return(\n        <Flex sx={{\n            mt: ['4rem', '6rem', '8rem', '8rem'],\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        }}>\n            {previous && (\n                <Link sx={{ \n                    textDecoration: 'none',\n                    \":hover\": {\n                        textDecoration: 'underline',\n                        color: 'secondary'\n                    }\n                }} href={`/${previous.fields.slug}`} rel=\"prev\">\n                    {\"\\u2190\"} {previous.frontmatter.title}\n                </Link>\n            )}\n            {next && (\n                <Link sx={{\n                    textDecoration: 'none',\n                    \":hover\": {\n                        textDecoration: 'underline',\n                        color: 'secondary'\n                    }\n                }} href={`/${next.fields.slug}`} rel=\"next\">\n                    {next.frontmatter.title} {\"\\u2192\"}\n                </Link>\n            )}\n        </Flex>\n    )\n}\n\nclass BlogPost extends React.Component {\n    render(){\n        const post = this.props.data.post\n        const {previous, next} = this.props.pageContext\n\n        return(\n            <Layout>\n                <SEO \n                    title={post.frontmatter.title}\n                    description={post.frontmatter.description}\n                    image=\"\"\n                    pathName={post.fields.slug}\n                    article\n                />\n                <PostHeader \n                    title={post.frontmatter.title}\n                    date={post.frontmatter.date}\n                    tags={post.frontmatter.topics}\n                />\n                \n                <article sx={{\n                    my: '4rem'\n                }}>\n                    <MDXRenderer>\n                        {post.body}\n                    </MDXRenderer>\n\n                    <PrvNextArticle previous={previous} next={next} />\n                </article>\n            </Layout>\n        )\n    }\n}\n\nexport default BlogPost\n\nexport const query = graphql`\nquery($slug: String!) {\n    post: mdx(fields: {slug: {eq: $slug}}){\n        fields {\n            slug\n        }\n        frontmatter {\n            title\n            topics\n            date(formatString: \"YYYY / MM / DD\")\n            description\n        }\n        body\n    }\n}\n`"],"sourceRoot":""}